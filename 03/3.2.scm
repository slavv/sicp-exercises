(define (make-monitored f)
  (let ((calls-count 0))
    (lambda (m)
      (cond ((eq? m `how-many-calls?) calls-count)
            ((eq? m `reset-count) (set! calls-count 0))
            (else (begin (set! calls-count (+ calls-count 1))
                         (f m)))))))

(define s (make-monitored sqrt))
(s 100)
(s `how-many-calls?)
(s 100)
(s `how-many-calls?)
(s 100)
(s `how-many-calls?)