(define max-password-tries 7)
(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  
  (define (dispatch m)
    (cond ((eq? m `withdraw) withdraw)
          ((eq? m `deposit) deposit)
          (else (error "Unknown request - MAKE-ACCOUNT"
                       m))))
  
  (let ((password-tries-count 0))
    (lambda (password-try m)
      (if (eq? password-try password)
          (begin (set! password-tries-count 0)
                 (dispatch m))
          (begin (set! password-tries-count (+ password-tries-count 1))
                 (if (> password-tries-count max-password-tries)
                     (lambda(x)(call-the-cops))
                     (lambda(x)(display "Incorrect password"))))))))

(define acc (make-account 100 `secret-password))
((acc `secret-password `withdraw) 40)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)
((acc `some-other-password `deposit) 50)